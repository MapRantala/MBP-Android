package com.androidbook.triviaquiz;

import java.net.URL;
import java.util.Hashtable;

import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.util.Log;
import android.view.Gravity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.widget.ImageSwitcher;
import android.widget.ImageView;
import android.widget.TextSwitcher;
import android.widget.TextView;
import android.widget.ViewSwitcher;

public class QuizGameActivity extends Activity {

    SharedPreferences mGameSettings;
    Hashtable<Integer, Question> mQuestions;
    
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.game);

        
        // Set up Text Switcher
        TextSwitcher questionTextSwitcher = (TextSwitcher) findViewById(R.id.TextSwitcher_QuestionText);
        //questionTextSwitcher.setInAnimation(in);
        //questionTextSwitcher.setOutAnimation(out);
        questionTextSwitcher.setFactory(new MyTextSwitcherFactory());
        questionTextSwitcher.setCurrentText("First Text String");
        

        // Set up Image Switcher
        ImageSwitcher questionImageSwitcher = (ImageSwitcher) findViewById(R.id.ImageSwitcher_QuestionImage);
        //questionImageSwitcher.setInAnimation(in);
        //questionImageSwitcher.setOutAnimation(out);
        questionImageSwitcher.setFactory(new MyImageSwitcherFactory());
        Drawable image = getQuestionImageDrawable(startingQuestionNumber);
        questionImageSwitcher.setImageDrawable(image);
        
        // Initialize question batch
        mQuestions = new Hashtable<Integer, Question>(QUESTION_BATCH_SIZE);
        
	}

	private Drawable getQuestionImageDrawable(int questionNumber){
		Drawable image;
		URL imageUrl;
		
		try{
			imageUrl = new URL(getQuestionImageUrl(questionNumber));
			Bitmap bitmap = BitmapFactory.decodeStream(imageUrl.openStream());
			image = new BitmapDrawable(bitmap);
		}catch (Exception e){
			Log.e("Quiz", "Decoding Bitmap stream failed.");
			image = getResources().getDrawable(R.drawable.noquestion);
		}
	}
	
    /**
     * Returns a {@code String} representing the URL to an image for a particular question
     * 
     * @param questionNumber
     *            The question to get the URL for
     * @return A {@code String} for the URL or null if none found
     */
    private String getQuestionImageUrl(Integer questionNumber) {
        String url = null;
        Question curQuestion = (Question) mQuestions.get(questionNumber);
        if (curQuestion != null) {
            url = curQuestion.mImageUrl;
        }
        return url;
    }
    
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		super.onCreateOptionsMenu(menu);
		getMenuInflater().inflate(R.menu.gameoptions, menu);
		menu.findItem(R.id.help_menu_item).setIntent(
				new Intent(this, QuizHelpActivity.class));
		menu.findItem(R.id.settings_menu_item).setIntent(
				new Intent(this, QuizSettingsActivity.class));
		return true;
	}
	
	@Override
	public boolean onOptionsItemSelected(MenuItem item){
		super.onOptionsItemSelected(item);
		startActivity(item.getIntent());
		return true;
	}
	
	private class MyImageSwitcherFactory implements ViewSwitcher.ViewFactory{
		public View makeView() {
			ImageView imageView = new ImageView(QuizGameActivity.this);
			imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);
			imageView.setLayoutParams(new ImageSwitcher.LayoutParams(
					LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
			return imageView;
			
		}
	}  //private class MyImageSwitcherFactory
	
	private class MyTextSwitcherFactory implements ViewSwitcher.ViewFactory{

		@Override
		public View makeView() {
			TextView textView = new TextView(QuizGameActivity.this);
			textView.setGravity(Gravity.CENTER);
			Resources res = getResources();
			float dimension = res.getDimension(R.dimen.game_question_size);
			int titleColor = res.getColor(R.color.title_color);
			int shadowColor = res.getColor(R.color.title_glow);
			textView.setTextSize(dimension);
			textView.setTextColor(titleColor);
			textView.setShadowLayer(10, 5, 5, shadowColor);
			return textView;
		}
	
	}
	

    /**
     * Object to manage the data for a single quiz question
     * 
     */
    private class Question {
        @SuppressWarnings("unused")
        int mNumber;
        String mText;
        String mImageUrl;

        /**
         * 
         * Constructs a new question object
         * 
         * @param questionNum
         *            The number of this question
         * @param questionText
         *            The text for this question
         * @param questionImageUrl
         *            A valid image Url to display with this question
         */
        public Question(int questionNum, String questionText, String questionImageUrl) {
            mNumber = questionNum;
            mText = questionText;
            mImageUrl = questionImageUrl;
        }
    }

}
